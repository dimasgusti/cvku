generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid()) @map("_id")
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId], name: "provider_providerAccountId")
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id                          String   @id @default(cuid()) @map("_id")
  mayarId                     String
  userId                      String
  customerMobile              String?
  status                      String
  paymentMethod               String
  productName                 String
  productType                 String
  membership                  String
  credit                      Int
  isAdminFeeBorneByCustomer   Boolean
  isChannelFeeBorneByCustomer Boolean
  createdAt                   DateTime @default(now())
  endsAt                      DateTime
  User                        User?    @relation(fields: [userId], references: [id])
}

model User {
  id            String        @id @default(cuid()) @map("_id")
  name          String?
  username      String?       @unique
  title         String?
  country       String?
  bio           String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  social        Json
  website       String?
  linkedin      String?
  github        String?
  private       Boolean       @default(true)
  template      String        @default("default")
  viewCount     Int           @default(0)
  accounts      Account[]
  sessions      Session[]
  education     Json[]        @default([])
  project       Json[]        @default([])
  experience    Json[]        @default([])
  award         Json[]        @default([])
  volunteer     Json[]        @default([])
  certification Json[]        @default([])
  skill         Json[]        @default([])
  language      Json[]        @default([])
  publication   Json[]        @default([])
  blog          Json[]        @default([])
  setting       Json[]        @default([])
  transactions  Transaction[]
}

model Feedback {
  id        String   @id @default(cuid()) @map("_id")
  name      String?
  message   String
  createdAt DateTime @default(now())
}

model VerificationRequest {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
