// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid()) @map("_id")
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId], name: "provider_providerAccountId")
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Project {
  id          String  @id @default(cuid()) @map("_id")
  userId      String
  type        String
  title       String
  year        String
  company     String?
  url         String?
  description String?
  User        User?   @relation(fields: [userId], references: [id])
}

model Award {
  id          String  @id @default(cuid()) @map("_id")
  userId      String
  type        String
  title       String
  year        String
  presentedBy String?
  url         String?
  description String?
  User        User?   @relation(fields: [userId], references: [id])
}

model Record {
  id           String  @id @default(cuid()) @map("_id")
  userId       String?
  type         String
  title        String?
  year         String?
  issued       String?
  expires      String?
  from         String?
  to           String?
  company      String?
  organization String?
  location     String?
  presentedBy  String?
  url          String?
  description  String?
  image        String?
  User         User?   @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  username      String?   @unique
  title         String?
  country       String?
  bio           String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  social        Json
  template      String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
  awards        Award[]
  records       Record[]
}

model VerificationRequest {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
